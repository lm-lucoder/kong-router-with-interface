version: '3.1'

services:

  kong-db:
    image: postgres:13
    container_name: kong-postgres
    restart: always
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    volumes:
      - kong_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kong_network

  kong:
    image: kong:3.4.0
    container_name: kong-gateway
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    command: >
      sh -c "kong migrations bootstrap || kong migrations up || true && kong start"
    ports:
      - "80:8000"
      - "8001:8001"
    depends_on:
      kong-db:
        condition: service_healthy
    networks:
      - kong_network

  konga-db:
    image: postgres:11
    container_name: konga-postgres
    restart: always
    environment:
      POSTGRES_USER: konga
      POSTGRES_PASSWORD: konga
      POSTGRES_DB: konga
    volumes:
      - konga_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U konga"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kong_network

  konga-prepare:
    image: pantsel/konga
    command: "-c prepare -a postgres -u postgresql://konga:konga@konga-db:5432/konga"
    networks:
      - kong_network
    restart: on-failure
    depends_on:
      konga-db:
        condition: service_healthy

  konga:
    image: pantsel/konga
    container_name: konga
    restart: always
    ports:
      - "1337:1337"
    environment:
      DB_ADAPTER: postgres
      DB_HOST: konga-db
      DB_PORT: 5432
      DB_USER: konga
      DB_PASSWORD: konga
      DB_DATABASE: konga
      NODE_ENV: production
    depends_on:
      konga-prepare:
        condition: service_completed_successfully
    networks:
      - kong_network

volumes:
  kong_postgres_data:
  konga_db_data:

networks:
  kong_network:
    driver: bridge
